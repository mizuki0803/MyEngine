#pragma once
#include "ObjObject3d.h"

/// <summary>
/// ボス(本体)
/// </summary>
class BossMainBody : public ObjObject3d
{
public: //静的メンバ関数
	/// <summary>
	/// 生成処理
	/// </summary>
	/// <param name="model">モデル</param>
	/// <returns>ボス(本体)</returns>
	static BossMainBody* Create(ObjModel* model, const Vector3& position);

	//getter
	static const int GetMaxHP() { return BossMainBody::maxHP; }

public: //メンバ関数
	/// <summary>
	/// ダメージを喰らう
	/// </summary>
	/// <param name="damageNum">ダメージ量</param>
	void Damage(int damageNum);

	/// <summary>
	/// 降下
	/// </summary>
	/// <param name="time">イージング用(0〜1)の数値</param>
	void Fall(const float time);

	/// <summary>
	/// 攻撃状態に変更
	/// </summary>
	/// <param name="time">イージング用(0〜1)の数値</param>
	void ChangeAttackMode(const float time);

	/// <summary>
	/// 待機状態に変更
	/// </summary>
	/// <param name="time">イージング用(0〜1)の数値</param>
	void ChangeWaitMode(const float time);

	//getter
	Vector3 GetWorldPos();
	const bool GetIsDead() { return isDead; }

protected: //静的メンバ変数
	//体力
	static const int maxHP = 60;
	//攻撃状態のY軸回転
	static const float attackModeRotY;
	//待機状態のY軸回転
	static const float waitModeRotY;

private: //メンバ変数
	//初期座標
	Vector3 startPos;
	//体力
	int HP = maxHP;
	//死亡フラグ
	bool isDead = false;
};
